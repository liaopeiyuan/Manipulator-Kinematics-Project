clear L
deg = pi/180;
t=[0 0 0 0 0 0];


L(1) = Revolute('d', 0, 'a', 0, 'alpha', -pi/2, ...
    'I', [0, 0.35, 0, 0, 0, 0], ...
    'r', [0, 0, 0], ...
    'm', 0, ...
    'Jm', 200e-6, ...
    'G', -62.6111, ...
    'B', 1.48e-3, ...
    'Tc', [0.395 -0.435], ...
    'qlim', [-160 160]*deg,'modified' );

L(2) = Revolute('d', 0, 'a', 0.4318, 'alpha', 0, ...
    'I', [0.13, 0.524, 0.539, 0, 0, 0], ...
    'r', [-0.3638, 0.006, 0.2275], ...
    'm', 17.4, ...
    'Jm', 200e-6, ...
    'G', 107.815, ...
    'B', .817e-3, ...
    'Tc', [0.126 -0.071], ...
    'qlim', [-45 225]*deg,'modified' );

L(3) = Revolute('d', 0.15005, 'a', 0.0203, 'alpha', -pi/2,  ...
    'I', [0.066, 0.086, 0.0125, 0, 0, 0], ...
    'r', [-0.0203, -0.0141, 0.070], ...
    'm', 4.8, ...
    'Jm', 200e-6, ...
    'G', -53.7063, ...
    'B', 1.38e-3, ...
    'Tc', [0.132, -0.105], ...
    'qlim', [-225 45]*deg,'modified' );

L(4) = Revolute('d', 0.4318, 'a', 0, 'alpha', pi/2,  ...
    'I', [1.8e-3, 1.3e-3, 1.8e-3, 0, 0, 0], ...
    'r', [0, 0.019, 0], ...
    'm', 0.82, ...
    'Jm', 33e-6, ...
    'G', 76.0364, ...
    'B', 71.2e-6, ...
    'Tc', [11.2e-3, -16.9e-3], ...
    'qlim', [-110 170]*deg,'modified');

L(5) = Revolute('d', 0, 'a', 0, 'alpha', -pi/2,  ...
    'I', [0.3e-3, 0.4e-3, 0.3e-3, 0, 0, 0], ...
    'r', [0, 0, 0], ...
    'm', 0.34, ...
    'Jm', 33e-6, ...
    'G', 71.923, ...
    'B', 82.6e-6, ...
    'Tc', [9.26e-3, -14.5e-3], ...
    'qlim', [-100 100]*deg,'modified' );


L(6) = Revolute('d', 0, 'a', 0, 'alpha', 0,  ...
    'I', [0.15e-3, 0.15e-3, 0.04e-3, 0, 0, 0], ...
    'r', [0, 0, 0.032], ...
    'm', 0.09, ...
    'Jm', 33e-6, ...
    'G', 76.686, ...
    'B', 36.7e-6, ...
    'Tc', [3.96e-3, -10.5e-3], ...
    'qlim', [-266 266]*deg ,'modified');

for i=1:6
    L(i).theta=t(i)
end
clear i

p560 = SerialLink(L, 'name', 'Puma560', ...
    'manufacturer', 'Unimation', 'comment', 'viscous friction; params of 8/95');


transf=0:0.2:1
theta1=[pi/8,0,0,0,0,0]
T1=p560.fkine([pi/8,0,0,0,0,0])
T2=p560.fkine([pi/16,0,0,0,0,0])
TD=ctraj(T1,T2,transf)
TS=[]
solv=[]
TD(:,:,1)
solve1=p560.ikine(TD(:,:,1),theta1)
TS=[TS;solve1]
for i=2:5
    TD(:,:,i)
    solv=p560.ikine(TD(:,:,i),solv,'pinv')
    TS =[TS;solv]
end

a=TS
for k=1:6
    for i=1:size(a)
        t(k)=a(i,k)
        p560.fkine(t)
        p560.plot(t)
    end
end

inte=0.1:0.1:0.5
inte=inte'
FE=horzcat(inte,TS)